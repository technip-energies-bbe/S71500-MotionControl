FUNCTION_BLOCK "SetpointOutputs"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      setpointProps : Array[1.."AXIS_NUM"] of Real;
      motionControlParam : "typeMotionControlParam";
      timeCycle : Real;
      axisParams : Array[1.."AXIS_NUM"] of "typeAxisParam";
   END_VAR

   VAR_OUTPUT 
      finalSetpointProps : Array[1.."AXIS_NUM"] of Real;
      sat : Bool;
   END_VAR

   VAR 
      InstFirstOrderFilters { S7_SetPoint := 'False'} : Array[1.."AXIS_NUM"] of "FirstOrderFilter";
   END_VAR

   VAR_TEMP 
      axisCounter : Int;
      aux : Array[1.."AXIS_NUM"] of Real;
      checkSatOutputs : Array[1.."AXIS_NUM"] of Bool;
      satOutputs : Array[1.."AXIS_NUM"] of Real;
      jumpOutputs : Array[1.."AXIS_NUM"] of Real;
   END_VAR


BEGIN
	(* Output process *)
	
	FOR #axisCounter := 1 TO "AXIS_NUM" DO
	    
	    #InstFirstOrderFilters[#axisCounter](input := #setpointProps[#axisCounter],
	                                         timeConstant := #motionControlParam.outputParam.filterTimeConsts[#axisCounter],
	                                         timeCycle := #timeCycle,
	                                         enable := TRUE,
	                                         output => #aux[#axisCounter]);
	    
	    #satOutputs[#axisCounter] := "Sat"(input := #aux[#axisCounter]);
	    
	    #finalSetpointProps[#axisCounter] := "Jump"(axisParam := #axisParams[#axisCounter],
	                                                input := #satOutputs[#axisCounter]);
	END_FOR;
	
	#sat := "CheckSat"(satParam := #motionControlParam.satParam, setpointProp := #aux);
	
	
END_FUNCTION_BLOCK

