FUNCTION_BLOCK "CartTrajectoryPlan"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      setSpeeds : Array[1.."AXIS_NUM"] of Real;
      armPos : Array[1.."AXIS_NUM"] of Real;
      motionControlParam : "typeMotionControlParam";
      enable : Bool;
      timeCycle : Real;
      sat : Bool;
   END_VAR

   VAR_OUTPUT 
      setPos : Array[1.."AXIS_NUM"] of Real;
   END_VAR

   VAR 
      setPosMems : Array[1.."AXIS_NUM"] of Real := [3(0.0)];
      satGainMem : Real := 1.0;
   END_VAR

   VAR_TEMP 
      satGain : Real;
      axisCounter : Int;
   END_VAR


BEGIN
	(* Trajectory calculation in easyDrive mode *)
	
	(* If the block is not used, reset saturation memory*)
	IF NOT #enable THEN
	    #satGainMem := 1.0;
	END_IF;
	
	(* Saturation test *)
	IF #sat = TRUE THEN
	    #satGain := #satGainMem - #motionControlParam.satParam.deltaSatGainNeg;
	    IF #satGain < 0 THEN
	        #satGain := 0;
	    END_IF;
	ELSE
	    #satGain := #satGainMem + #motionControlParam.satParam.deltaSatGainPos;
	    IF #satGain > 1 THEN
	        #satGain := 1;
	    END_IF;
	END_IF;
	
	(* Main Loop *)
	FOR #axisCounter := 1 TO "AXIS_NUM" DO
	    IF NOT #enable THEN
	        #setPos[#axisCounter] := #armPos[#axisCounter];
	    ELSE
	        #setPos[#axisCounter] := #setPosMems[#axisCounter] + #motionControlParam.cartSpeedGains[#axisCounter] * #setSpeeds[#axisCounter] * #timeCycle * #satGain;
	    END_IF;
	END_FOR;
	
	(* Output memory update *)
	FOR #axisCounter := 1 TO "AXIS_NUM" DO
	    #setPosMems[#axisCounter] := #setPos[#axisCounter];
	END_FOR;
	
	(* Saturation gain memory update*)
	#satGainMem := #satGain;
	
	
END_FUNCTION_BLOCK

