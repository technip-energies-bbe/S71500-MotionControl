FUNCTION_BLOCK "Test_Conv"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR 
      InstMotionControl { S7_SetPoint := 'False'} : "MotionControl";
      InstTest_ArmModel : "Test_ArmModel";
      testCount { S7_SetPoint := 'True'} : Real := 0.0;
      angleSensors : Array[1.."AXIS_NUM"] of Real;
      angleCpms : Array[1.."AXIS_NUM"] of Int;
   END_VAR

   VAR_TEMP 
      setpoints : Array[1.."AXIS_NUM"] of Real;
      propSetpoints : Array[1.."AXIS_NUM"] of Real;
      armParam : "typeArmParam";
      timeCycle : Real;
      easyDriveOn : Bool;
      motionControlEnable : Bool;
   END_VAR

   VAR CONSTANT 
      TESTS_NUM : Int := 1000;
   END_VAR


BEGIN
	#easyDriveOn := False;
	#motionControlEnable := True;
	#timeCycle := 0.01;
	
	IF #testCount > #TESTS_NUM THEN
	    #setpoints[1] := 0.0;
	    #setpoints[2] := 0.0;
	    #setpoints[3] := 1.0;
	ELSE
	    #setpoints[1] := 0.0;
	    #setpoints[2] := 0.0;
	    #setpoints[3] := -1.0;
	END_IF;
	
	IF #testCount > 2 * #TESTS_NUM THEN
	    #testCount := 0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[1].inputMems[1] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[1].inputMems[2] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[1].inputMems[3] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[1].outputMems[1] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[1].outputMems[2] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[1].outputMems[3] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[2].inputMems[1] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[2].inputMems[2] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[2].inputMems[3] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[2].outputMems[1] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[2].outputMems[2] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[2].outputMems[3] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[3].inputMems[1] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[3].inputMems[2] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[3].inputMems[3] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[3].outputMems[1] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[3].outputMems[2] := 0.0;
	    #InstTest_ArmModel.InstTest_SecondOrderAndIntegrators[3].outputMems[3] := 0.0;
	END_IF;
	
	#InstMotionControl(easyDriveOn := #easyDriveOn,
	                   motionControlEnable := #motionControlEnable,
	                   setpoints := #setpoints,
	                   angleSensors := #angleSensors,
	                   timeCycle := #timeCycle,
	                   armParam := "projectParam".armParams[1],
	                   finalSetpointProps => #propSetpoints);
	
	#InstTest_ArmModel(armParam := "projectParam".armParams[1],
	                   setpoints := #propSetpoints,
	                   timeCycle := #timeCycle,
	                   angles => #angleSensors);
	
	"Test_CpmsUnscaling"(inputs := #angleSensors,
	                     outputs => #angleCpms);
	
	#testCount := #testCount + 1;
	
END_FUNCTION_BLOCK

