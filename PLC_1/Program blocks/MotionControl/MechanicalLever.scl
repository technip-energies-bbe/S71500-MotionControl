FUNCTION "MechanicalLever" : Real
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      axisParam : "typeAxisParam";
      axisAngle : Real;
   END_VAR

   VAR_TEMP 
      theta0 : Real;
      theta : Real;
      Rv : Real;
      Rp : Real;
   END_VAR


BEGIN
	(* Mechanical geometric gain calculation *)
	IF #axisParam.axisType = 'sheave' OR #axisParam.axisType = 'double' THEN
	    #MechanicalLever := #axisParam.sheaveDiam / 2;
	    
	ELSIF #axisParam.axisType = 'direct' THEN
	    IF #axisParam.movingCylinder = TRUE THEN
	        #theta0 := ATAN(#axisParam.bodyPivotPos[2] / #axisParam.bodyPivotPos[1]);
	        #theta := #axisAngle + #theta0 - #axisParam.angleOffset;
	        #Rv := SQRT((#axisParam.bodyPivotPos[1] ** 2 + #axisParam.bodyPivotPos[2] ** 2));
	        #MechanicalLever := ABS(#Rv
	                                * (#axisParam.rodPivotPos[1] * SIN(#theta) - #axisParam.rodPivotPos[2] * COS(#theta)))
	        / SQRT((#Rv * SIN(#theta) - #axisParam.rodPivotPos[2]) ** 2 + (#Rv * COS(#theta) - #axisParam.rodPivotPos[1]) ** 2);
	    ELSE
	        #theta0 := ATAN(#axisParam.rodPivotPos[2] / #axisParam.rodPivotPos[1]);
	        #theta := #axisAngle + #theta0 - #axisParam.angleOffset;
	        #Rp := SQRT((#axisParam.rodPivotPos[1] ** 2 + #axisParam.rodPivotPos[2] ** 2));
	        #MechanicalLever := ABS(#Rp
	                                * (#axisParam.bodyPivotPos[1] * SIN(#theta) - #axisParam.bodyPivotPos[2] * COS(#theta)))
	        / SQRT((#Rp * SIN(#theta) - #axisParam.bodyPivotPos[2]) ** 2 + (#Rp * COS(#theta) - #axisParam.bodyPivotPos[1]) ** 2);
	        
	    END_IF;
	ELSE
	    #MechanicalLever := 1.0;
	END_IF;
	
	
END_FUNCTION

